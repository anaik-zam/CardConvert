import logging
from base import BasicCard
logger = logging.getLogger('CardConvert.cards.base')


class Heroes(BasicCard):
    @property
    def card_class(self):
        return 'heroes'

    def create_instances(self, cards_dict):
        """
        Convenience function to generate instances from a card_dict.
        Args:
            cards_dict (dict): dict generated by the crawler function
        Returns:
            cards (list): list of instances of this class
        """
        cards = []
        for key in cards_dict:
            cards.append(Heroes(self.config, name=key, info=cards_dict[key]))
        return cards

    def _make_copies(self):
        """
        Function to create copies of this card depending on the card class and it's config
        """
        pass

    def _make_animation_copies(self):
        """
        Function to create animated copies of this card depending on the card class and it's config
        """
        logger.info('Doing animation')
        if self._info['animated']:
            self._make_animated_png()
            self._make_animated_gif()
